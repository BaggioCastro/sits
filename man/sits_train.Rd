% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_machine_learning.R
\name{sits_train}
\alias{sits_train}
\title{Train classification models}
\usage{
sits_train(data, ml_method = sits_svm())
}
\arguments{
\item{data}{Time series with the training samples.}

\item{ml_method}{Machine learning method.}
}
\value{
Model fitted to input data
                         to be passed to \code{\link[sits]{sits_classify}}
}
\description{
Given a tibble with a set of distance measures,
   returns trained models. Currenly, sits supports the following models:
'svm' (see \code{\link[sits]{sits_svm}}),
random forests (see \code{\link[sits]{sits_rfor}}),
multinomial logit (see \code{\link[sits]{sits_mlr}}) and its variants
'lasso' (see \code{\link[sits]{sits_mlr}}) and
'ridge' (see \code{\link[sits]{sits_mlr}}),
extreme gradient boosting (see \code{\link[sits]{sits_xgboost}}),
light gradient boosting machine (see \code{\link[sits]{sits_lightgbm}}),
and different deep learning functions, including multi-layer perceptrons
(see \code{\link[sits]{sits_mlp}}), 1D convolution neural
networks \code{\link[sits]{sits_TempCNN}},
and a deep Residual Network \code{\link[sits]{sits_ResNet}}.
}
\examples{
# Retrieve the set of samples for Mato Grosso (provided by EMBRAPA)
# fit a training model (RFOR model)
samples <- sits_select(samples_modis_4bands, bands = c("NDVI"))
ml_model <- sits_train(samples, sits_rfor(num_trees = 100))
# get a point and classify the point with the ml_model
point_ndvi <- sits_select(point_mt_6bands, bands = "NDVI")
class <- sits_classify(point_ndvi, ml_model)
}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}

Alexandre Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}
}
