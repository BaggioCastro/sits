% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_machine_learning.R
\name{sits_train}
\alias{sits_train}
\title{Train sits classification models}
\usage{
sits_train(data.tb, ml_method = sits_svm())
}
\arguments{
\item{data.tb}{Time series with the training samples.}

\item{ml_method}{Machine learning method that returns a model for prediction.}
}
\value{
A model fitted to input data given by train_method parameter.
}
\description{
Given a tibble with a set of distance measures,
   returns trained models. Currenly, sits supports the following models:
'svm' (see \code{\link[sits]{sits_svm}}), 'random forest' (see \code{\link[sits]{sits_rfor}}),
'lda' (see \code{\link[sits]{sits_lda}}),
'qda' (see \code{\link[sits]{sits_qda}}), multinomial logit' (see \code{\link[sits]{sits_mlr}}),
'lasso' (see \code{\link[sits]{sits_mlr}}), 'ridge' (see \code{\link[sits]{sits_mlr}}),
and 'deep learning' (see \code{\link[sits]{sits_deeplearning}}).
The sits_train function is called inside \code{\link[sits]{sits_classify}} , so the user does not need
to explicitly use this function. Please see the above-mention classification function.
}
\examples{
\donttest{
# Retrieve the set of samples for the Mato Grosso region (provided by EMBRAPA)
# find a training model based on the distances and default values (SVM model)
samples.tb <- sits_select_bands(samples_mt_9classes, ndvi, evi, nir, mir)
ml_model <- sits_train(samples.tb, sits_rfor())
# get a point and classify the point with the ml_model
point.tb <- sits_select_bands(point_mt_6bands, ndvi, evi, nir, mir)
class.tb <- sits_classify(point_mt_6bands, ml_model)
sits_plot(class.tb)
}
}
\author{
Rolf Simoes, \email{rolf.simoes@inpe.br}

Gilberto Camara, \email{gilberto.camara@inpe.br}

Alexandre Xavier Ywata de Carvalho, \email{alexandre.ywata@ipea.gov.br}
}
