% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_tile_api.R
\name{chunks_api}
\alias{chunks_api}
\alias{.chunks_create}
\alias{.chunks_as_raster}
\alias{.chunks_no_overlap}
\alias{.chunks_filter_spatial}
\title{Chunks API}
\usage{
.chunks_create(block, overlap, image_size, image_bbox)

.chunks_as_raster(chunk, nlayers)

.chunks_no_overlap(chunks)

.chunks_filter_spatial(chunks, roi)
}
\arguments{
\item{block}{A \code{block} to represent the common chunk size.}

\item{overlap}{An integer informing overlapping size in pixels.}

\item{image_size}{A \code{block} informing original image's matrix size.}

\item{image_bbox}{A \code{bbox} informing original image bbox.}

\item{chunks}{A \code{chunk}.}
}
\value{
\code{.chunks_create()}: \code{chunks} tibble.

\code{raster} object.

\code{.chunks_no_overlap()}: \code{chunks} tibble.

\code{.chunks_filter_spatial()}: \code{chunks} tibble.
}
\description{
A chunk represents a rectangular region definition of a matrix and
its corresponding geographical area. So, a chunk object contains a
\code{block} and a \code{bbox} information. chunks can be used to access
specific raster image regions and optimize memory usage.
}
\details{
Generally, chunks are created from an actual image that is divided
into small blocks. The chunks also provide overlapping support, that is,
chunks that intersects its neighbors by some amount of pixels.
}
\section{Functions}{
\itemize{
\item \code{.chunks_create()}: Creates a tibble of chunks with the same size as
\code{block} and additional \code{overlap}.

\item \code{.chunks_as_raster()}: Creates an empty \code{raster} object based on the
first chunk passed in \code{chunk} parameter.

\item \code{.chunks_no_overlap()}: Creates a \code{chunk} that can be used to
remove overlaps.

\item \code{.chunks_filter_spatial()}: Filter \code{chunks} that intersects a given
\code{roi}.

}}
\examples{
if (sits_run_examples()) {
chunks <- .chunks_create(
  block = c(ncols = 512, nrows = 512),
  overlap = 2,
  image_size = c(ncols = 4000, nrows = 4000),
  image_bbox = c(xmin = 1, xmax = 2, ymin = 3, ymax = 4, crs = 4326)
)
# remove overlaps from chunks
cropped <- .chunks_no_overlap(chunks)
# removing overlaps from a non overlapped chunks produces identical bbox
identical(.bbox(cropped), .bbox(.chunks_no_overlap(cropped)))
# blocks from 'cropped' can be used to remove any overlap from rasters
# produced from 'chunks'.
.chunks_filter_spatial(
  chunks = chunks,
  roi = c(lon_min = 1.3, lon_max = 1.7, lat_min = 3.3, lat_max = 3.7)
)
}

}
\seealso{
\link{chunk_accessors}

Other region objects API: 
\code{\link{.intersects}()},
\code{\link{bbox_api}},
\code{\link{block_api}},
\code{\link{roi_api}}
}
\concept{region objects API}
\keyword{internal}
