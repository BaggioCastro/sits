% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_source_api.R
\name{source_cube}
\alias{source_cube}
\alias{.source_cube}
\alias{.source_item_get_date}
\alias{.source_item_get_hrefs}
\alias{.source_item_get_bands}
\alias{.source_item_get_resolutions}
\alias{.source_items_new}
\alias{.source_items_bands_select}
\alias{.source_items_fileinfo}
\alias{.source_items_tiles_group}
\alias{.source_collection_sensor}
\alias{.source_collection_satellite}
\alias{.source_items_tile_get_crs}
\alias{.source_items_tile_get_name}
\alias{.source_items_tile_get_bbox}
\alias{.source_items_tile_get_size}
\alias{.source_items_cube}
\title{Functions to instantiate a new cube from a source}
\usage{
.source_cube(source, ...)

.source_item_get_date(source, item, ..., collection = NULL)

.source_item_get_hrefs(source, item, ..., collection = NULL)

.source_item_get_bands(source, item, ..., collection = NULL)

.source_item_get_resolutions(source, item, ..., collection = NULL)

.source_items_new(source, collection, ...)

.source_items_bands_select(source, collection, items, bands, ...)

.source_items_fileinfo(source, items, ..., collection = NULL)

.source_items_tiles_group(source, items, ..., collection = NULL)

.source_collection_sensor(source, collection)

.source_collection_satellite(source, collection)

.source_items_tile_get_crs(source, tile_items, ..., collection = NULL)

.source_items_tile_get_name(source, tile_items, ..., collection = NULL)

.source_items_tile_get_bbox(source, tile_items, ..., collection = NULL)

.source_items_tile_get_size(source, tile_items, ..., collection = NULL)

.source_items_cube(source, collection, name, items, file_info, ...)
}
\arguments{
\item{source}{A \code{character} value referring to a valid data source.}

\item{...}{Additional parameters.}

\item{collection}{A \code{character} value referring to a collection of the
source.}

\item{items}{Any object referring to the images bands (scenes) that
compose a cube.}

\item{bands}{A \code{character} with bands to be select in items object.}

\item{name}{A \code{character} with cube name.}

\item{file_info}{A \code{tibble} that organizes the metadata about each
file in the tile: date, band, resolution, and path (or URL).}
}
\value{
The values returned by each function are described as follows.

\code{.source_cube()} returns a sits \code{tibble} with cube
metadata.

\code{.source_item_get_date()} returns a \code{Date} value.

\code{.source_item_get_hrefs()} returns a \code{character} vector
containing paths to each image band of an item.

\code{.source_item_get_bands()} returns a \code{character} vector
containing bands name of an item.

\code{.source_item_get_resolutions()} returns a named \code{list}
with \code{numeric} vectors containing the supported resolutions of an item.

\code{.source_items_new()} returns any object referring the images
of a sits cube.

A \code{STACItemCollection} object returned by rstac with items
 selected.

\code{.source_items_bands_select()} returns the same object as
\code{items} with selected bands.

\code{.source_items_fileinfo()} returns a \code{tibble} containing
sits cube.

\code{.source_items_tiles_group()} returns a \code{list} of
items.

\code{.source_items_get_sensor()} returns a \code{character} value.

\code{.source_items_get_satellite()} returns a \code{character}
value.

\code{.source_items_tile_get_crs()} returns a \code{character}
value.

\code{.source_items_tile_get_name()} returns a \code{character}
value.

\code{.source_items_tile_get_bbox()} returns a \code{numeric}
vector with 4 elements (xmin, ymin, xmax, ymax).

\code{.source_items_tile_get_size()} returns a \code{numeric}
vector with 2 elements (nrows, ncols).

\code{.source_cube()} returns a \code{tibble} containing a sits
cube tile (one row).
}
\description{
These functions provide an API to instantiate a new cube object and
access/retrieve information from services or local files to fill
cube attributes.

A cube is formed by images (items) organized in tiles. To create a sits
cube object (a \code{tibble}), a set of functions are called in order
to retrieve metadata.

\code{.source_cube()} is called to start the cube creation
from a source.

\code{.source_item_get_date()} retrieves the date of an item
(a set of images from different bands that forms a scene).

\code{.source_item_get_hrefs()} retrieves the paths or URLs of
each file bands of an item.

\code{.source_item_get_bands()} retrieves the bands present
in an item.

\code{.source_item_get_resolutions()} retrieves the supported
resolutions of an item (for each band).

\code{.source_items_new()} this function is called to create
an items object. In case of Web services, this function is responsible for
making the Web requests to the server.

Selection of items from specific bands by the user.

\code{.source_items_bands_select()} is a filter of bands and
selects the items' bands that will be in sits cube.

\code{.source_items_fileinfo()} creates the \code{fileinfo}
specification from items object.

\code{.source_items_tiles_group()} organizes items by tiles
and arrange items in each tile by date.

\code{.source_items_get_sensor()} retrieves the sensor from
items object.

\code{.source_items_get_satellite()} retrieves the satellite
name (platform) from items object.

\code{.source_items_tile_get_crs()} retrieves the CRS
string from items.

\code{.source_items_tile_get_name()} retrieves the tile name
from items.

\code{.source_items_tile_get_bbox()} retrieves the bounding
box from items of a tile.

\code{.source_items_tile_get_size()} retrieves the size
(in pixels) from items of a tile.

\code{.source_cube()} is called to create a data cubes tile,
that is, a row in sits data cube.
}
\keyword{internal}
