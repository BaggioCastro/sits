% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_cube.R
\name{sits_cube.raster_cube}
\alias{sits_cube.raster_cube}
\title{Defines a cube to retrieve data from a set of image files}
\usage{
\method{sits_cube}{raster_cube}(
  type = "RASTER",
  ...,
  name,
  satellite,
  sensor,
  resolution,
  data_dir = NULL,
  parse_info = NULL,
  delim = "_",
  timeline = NULL,
  bands = NULL,
  files = NULL
)
}
\arguments{
\item{type}{type of cube}

\item{...}{other parameters}

\item{name}{name of output data cube}

\item{satellite}{satellite}

\item{sensor}{sensor}

\item{resolution}{sensor resolution}

\item{data_dir}{directory where data is located}

\item{parse_info}{parsing information (see above)}

\item{delim}{character to use as delimiter (default = "_")}

\item{timeline}{vector with timeline of the files}

\item{bands}{vector of bands associated to the files}

\item{files}{vector of file names for each band}
}
\value{
data cube
}
\description{
Defines a cube to retrieve data from a set of image files.
             All image files should have the same spatial resolution
             and same projection. There are two options for creating a cube
             based on files:
' \itemize{
 \item{files with date and band information: }{In this case, the files
             contain date and band information in their names. This is
             the case of files in repositories such as Sentinel Hub
             and AWS. Timeline and the bands are deduced from filenames.
             Examples of valid image names include
             "CB4_64_16D_STK_022024_2018-08-29_2018-09-13_EVI.tif" and
             "B02_2018-07-18.jp2". In each case, the user has to provide
             appropriate parsing information that allows SITS to extract
             the band and the date. In the examples above, the parsing info
             would include "_" as a delimiter. In the first, the names of the
             resulting columns for parsing are "X1", "X2", "X3", "X4", "X5",
             "date", "X7", and "band".
             In the second, they are "band" and "date".}
 \item{bundled files with many images}: {in this case, each input band
             has to be organised as a raster brick, and the
             number of input files must match the number of bands.
             All input files must have the same spatial resolution and
             share the same timeline (in order).
             The timeline for the cube must be provided.}
}
}
\examples{

# Create a raster cube based on CBERS data
data_dir <- system.file("extdata/raster/cbers", package = "sits")

cbers_cube <- sits_cube(name       = "022024",
                     satellite  = "CBERS-4",
                     sensor     = "AWFI",
                     resolution = "64m",
                     data_dir   = data_dir,
                     delim      = "_",
                     parse_info = c("X1", "X2", "band", "date"))

# Create a raster cube based on bricks
# inform the files that make up a raster brick with 392 time instances
files <- c(system.file("extdata/raster/mod13q1/sinop-crop-ndvi.tif",
           package = "sits"))

# create a raster cube file based on the information about the files
raster.tb <- sits_cube(type = "RASTER",
                       name      = "Sinop-crop",
                       satellite = "TERRA",
                       sensor    = "MODIS",
                       timeline  = timeline_modis_392,
                       bands     = "NDVI",
                       files     = files)


}
