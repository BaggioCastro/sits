% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_tuning.R
\name{sits_torch_tuning}
\alias{sits_torch_tuning}
\title{Tuning torch optmizer's hyper-parameters}
\usage{
sits_torch_tuning(
  samples,
  ...,
  samples_validation = NULL,
  validation_split = 0.2,
  ml_fns = list(sits_tempcnn, sits_lighttae),
  opt_fns = list(torch::optim_adam, optim_adamw),
  lr = c(0.01, 0.005, 0.001),
  eps = c(1e-06, 1e-07, 1e-08),
  weight_decay = c(0, 1e-05, 1e-06),
  multicores = 2
)
}
\arguments{
\item{samples}{Time series with the training samples.}

\item{...}{Additional parameters.}

\item{samples_validation}{Time series with the validation samples. if the
\code{samples_validation} parameter is provided,
the \code{validation_split}
parameter is ignored.}

\item{validation_split}{Fraction of training data
to be used as validation data.}

\item{ml_fns}{A list of torch functions to be used.}

\item{opt_fns}{A list of optimizer functions to be used.}

\item{lr}{A vector with the learning rate values to
be tested.}

\item{eps}{A vector with the term added to the denominator to
improve numerical stability.}

\item{weight_decay}{A vector with the L2 regularization param.}

\item{multicores}{Number of cores to be used for tuning.}
}
\value{
A list containing the best torch optimizer and its parameters.
}
\description{
This function combines all parameters and computes torch models to
parameter combination, do a validation using validation samples or
splitting samples using validation_split. The function returns the
best hyper-parameters in a list.
}
\examples{
\donttest{
# read a set of samples
data(cerrado_2classes)
# two fold validation with random forest
hparams <- sits_torch_optim_tuning(cerrado_2classes)
}
}
