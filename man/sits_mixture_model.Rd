% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_mixture_model.R
\name{sits_mixture_model}
\alias{sits_mixture_model}
\title{Multiple endmember spectral mixture analysis}
\usage{
sits_mixture_model(
  cube,
  endmembers,
  memsize = 1,
  multicores = 2,
  output_dir = getwd(),
  rmse_band = TRUE,
  remove_outliers = TRUE,
  progress = TRUE
)
}
\arguments{
\item{cube}{A sits data cube.}

\item{endmembers}{Reference spectral endmembers.
(see details below).}

\item{memsize}{Memory available for the mixture model (in GB).}

\item{multicores}{Number of cores to be used for generate the
mixture model.}

\item{output_dir}{Directory for output images.}

\item{rmse_band}{A boolean indicating whether the error associated
with the linear model should be generated.
If true, a new band with errors for each pixel
is generated using the root mean square
measure (RMSE). Default is TRUE.}

\item{remove_outliers}{A boolean indicating whether values larger and
smaller than the limits of the image metadata,
and missing values should be marked as NA.
Default is TRUE.}

\item{progress}{Show progress bar? Default is TRUE.}
}
\value{
a sits cube with the fractions of each endmember.
        The sum of all fractions is restricted to 1 (scaled from 0 to 10000),
        corresponding to the abundance of the endmembers in the pixels.
}
\description{
Create a multiple endmember spectral mixture analyses fractions
images. We use the non-negative least squares (NNLS) solver to calculate the
fractions of each endmember. The NNLS was implemented by Jakob
Schwalb-Willmann in RStoolbox package (licensed as GPL>=3).
}
\details{
The \code{endmembers} parameter should be a tibble, csv or
a shapefile. \code{endmembers} parameter must have the following columns:
\code{type}, which defines the endmembers that will be
created and the columns corresponding to the bands that will be used in the
mixture model. See the \code{example} in this documentation for more details.

If you want to generate cloud endmembers,
it is useful to set the parameter \code{remove_outliers} to \code{FALSE}.
Some image products have cloud values that exceed the limits set by the
metadata, and therefore these values are removed if this option
is \code{TRUE}.
}
\examples{
if (sits_run_examples()) {
   # Create a sentinel-2 cube
   s2_cube <- sits_cube(
       source = "AWS",
       collection = "SENTINEL-S2-L2A-COGS",
       tiles = "20LKP",
       bands = c("B02", "B03", "B04", "B8A", "B11", "B12", "CLOUD"),
       start_date = "2019-06-13",
       end_date = "2019-06-30"
   )

   # Cube regularization for 16 days and 160 meters
   reg_cube <- sits_regularize(
       cube = s2_cube,
       period = "P16D",
       res = 160,
       multicores = 2,
       output_dir = tempdir()
   )

   # Create the endmembers tibble
   em <- tibble::tribble(
          ~type, ~B02, ~B03, ~B04, ~B8A, ~B11, ~B12,
       "forest",  200,  352,  189, 2800, 1340,  546,
         "land",  400,  650,  700, 3600, 3500, 1800,
        "water",  700, 1100, 1400,  850,   40,   26,
   )

   # Generate the mixture model
   mm <- sits_mixture_model(
       cube = reg_cube,
       endmembers = em,
       memsize = 4,
       multicores = 2,
       output_dir = tempdir()
   )
}

}
\references{
\code{RStoolbox} package (https://github.com/bleutner/RStoolbox/)
}
\author{
Felipe Carvalho, \email{felipe.carvalho@inpe.br}

Felipe Carlos,   \email{efelipecarlos@gmail.com}

Rolf Simoes,     \email{rolf.simoes@inpe.br}

Alber Sanchez,   \email{alber.ipia@inpe.br}
}
