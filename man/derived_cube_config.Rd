% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_tile_api.R
\name{derived_cube_config}
\alias{derived_cube_config}
\alias{.conf_derived_s3class}
\alias{.conf_derived_band}
\title{Config functions for \code{derived_cube}}
\usage{
.conf_derived_s3class(derived_class)

.conf_derived_band(derived_class, band)
}
\arguments{
\item{derived_class}{Class name of the \code{derived_cube}.}

\item{band}{Band name.}
}
\value{
Configuration value.
}
\description{
These are syntactic sugar functions to easily access config options for
bands of \code{derived_cube} cubes. \code{derived_cubes} are a S3 class
representation of a cube generated by the classification workflow starting
from an Earth Observation data cube.
}
\details{
There are several classes of \code{derived_cube}:
\itemize{
\item \code{probs_cube}: multilayer probability cube produced by a
  classification with the probabilities attributed to each class by a
  model. The possible band names are \code{'probs'}, \code{'bayes'}, and
  \code{'bilat'}, acronyms for 'probability', 'Bayesian smoothing', and
  'Bilateral smoothing'.
\item \code{class_cube}: labeled cube (classified map) produced by choosing
  a label for each pixel. Its unique band name is \code{'class'}.
\item \code{uncertainty_cube}: a cube produced to measure the uncertainty of
  a classification for each pixel. The possible band names are
  \code{'least'}, \code{'entropy'}, and \code{'margin'}, acronyms for
  the method used to produce the cube.
  \code{'bilat'}, acronyms for 'probability', 'Bayesian smoothing', and
  'Bilateral smoothing'.
}

Values for \code{derived_class} and \code{band} are lowercase. This was
done to avoid conflicts with \code{eo_cube} band naming (uppercase).
The config entries of a \code{derived_cube} are located in
\code{derived_cube -> <derived_class>} key.
}
\section{Functions}{
\itemize{
\item \code{.conf_derived_s3class()}: Get the S3 class values to instantiate a
new \code{derived_cube}.

\item \code{.conf_derived_band()}: Get the S3 class values to instantiate a
new \code{derived_cube}.

}}
\examples{
\dontrun{
# get S3 class value that a derived_cube of class 'probs' must have
.conf_derived_s3class("probs")
}

}
\seealso{
Band accessors: \link{band_accessors}

Other config functions: 
\code{\link{config_api}},
\code{\link{eo_cube_config}}
}
\concept{config functions}
\keyword{internal}
