% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sits_classification.R
\name{sits_classify.raster_cube}
\alias{sits_classify.raster_cube}
\title{Classify a data cube using multicore machines}
\usage{
\method{sits_classify}{raster_cube}(
  data,
  ml_model,
  ...,
  roi = NULL,
  filter = NULL,
  memsize = 8,
  multicores = 2,
  output_dir = "./",
  version = "v1"
)
}
\arguments{
\item{data}{data cube}

\item{ml_model}{R model trained by \code{\link[sits]{sits_train}}.}

\item{...}{other parameters to be passed to specific functions}

\item{roi}{a region of interest (see above)}

\item{filter}{smoothing filter to be applied (if desired).}

\item{memsize}{memory available for classification (in GB).}

\item{multicores}{number of cores to be used for classification.}

\item{output_dir}{directory for output file}

\item{version}{version of the output (for multiple classifications)}
}
\value{
cube with the metadata of a brick of probabilities.
}
\description{
Takes a data cube, whose metadata is
   described by tibble (created by \code{\link[sits]{sits_cube}}),
   a set of samples used for training a classification model,
   a prediction model (created by \code{\link[sits]{sits_train}}),
   and produces a classified set of RasterLayers.

   The "roi" parameter defines a region of interest. It can be
   an sf_object, a shapefile, or a bounding box vector with
   named XY values ("xmin", "xmax", "ymin", "ymax") or
   named lat/long values ("lat_min", "lat_max", "long_min", "long_max")

   The "memsize" and "multicores" parameters define the
   The "multicores" parameter defines the
   number of cores used for processing. The "memsize" parameter  controls
   the amount of memory available for classification.
}
\examples{
\donttest{
# Classify a raster file with 23 instances for one year
files <- c(system.file("extdata/raster/mod13q1/sinop-crop-ndvi.tif",
                       package = "sits"))
# create a data cube based on the information about the files
sinop <- sits_cube(type = "RASTER", satellite = "TERRA",
                   sensor = "MODIS", name = "Sinop-crop",
                   timeline = timeline_modis_392,
                   bands = c("NDVI"), files = files)

# classify the raster image
sinop_probs <- sits_classify(sinop, ml_model = rfor_model,
                             memsize = 2, multicores = 1)

# label the classified image
sinop_label <- sits_label_classification(sinop_probs)

# plot the raster image
plot(sinop_label, time = 1, title = "Sinop-2013-2014")

# smooth the result with a bayesian filter
sinop_bayes <- sits_label_classification(sinop_probs,
                               smoothing = "bayesian")

# plot the smoothened image
plot(sinop_bayes, time = 1, title = "Sinop-smooth")

# remove the files (cleanup)
file.remove(unlist(sinop_probs$files))
file.remove(unlist(sinop_label$files))
file.remove(unlist(sinop_bayes$files))
}
}
\author{
Gilberto Camara, \email{gilberto.camara@inpe.br}
}
